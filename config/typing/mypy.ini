[mypy]
python_version = 3.11
plugins = pydantic.mypy
follow_imports = silent
ignore_missing_imports = True
show_error_codes = True
warn_unused_configs = True
warn_unused_ignores = False
strict = True
namespace_packages = True
explicit_package_bases = True
mypy_path = src:typings
exclude = ^(tests/|use_cases/)

[pydantic-mypy]
init_typed = True
warn_untyped_fields = True
init_forbid_extra = True

# --- Temporary, module-scoped relaxations to ship ---
# FastAPI decorators: donâ€™t punish endpoints for untyped decorators
[mypy-ice_api.api.*]
disallow_untyped_decorators = False

[mypy-ice_api.ws_gateway]
disallow_untyped_decorators = False

[mypy-ice_api.main]
disallow_untyped_decorators = False

# --- API endpoints / WS / metrics: allow untyped decorators only here ---
[mypy-ice_api.ws.*]
disallow_untyped_decorators = False

[mypy-ice_api.errors]
disallow_untyped_decorators = False

[mypy-ice_api.metrics]
disallow_untyped_decorators = False

# Execution internals: allow untyped defs for now (keep strict elsewhere)
[mypy-ice_orchestrator.execution.*]
disallow_untyped_defs = False

# Node/workflow shell: same as above
[mypy-ice_orchestrator.workflow]
disallow_untyped_defs = False
disallow_incomplete_defs = False

[mypy-ice_orchestrator.execution.executor]
disallow_untyped_defs = False
disallow_incomplete_defs = False

[mypy-ice_orchestrator.execution.node_runtime_executor]
disallow_untyped_defs = False

# Context manager references abstract store until refactor completes
[mypy-ice_orchestrator.context.manager]
warn_return_any = False
