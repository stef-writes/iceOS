# docker-compose.itest.yml
services:
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-iceos}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-iceos}
      POSTGRES_DB: ${POSTGRES_DB:-iceos}
      POSTGRES_INITDB_ARGS: "-E UTF8"
    command: [
      "postgres",
      "-c", "fsync=off",
      "-c", "synchronous_commit=off",
      "-c", "full_page_writes=off",
      "-c", "shared_buffers=128MB"
    ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - pg_itest:/var/lib/postgresql/data

  api:
    # In CI this should be a prebuilt image; locally you can swap to `build:` if you want.
    image: ${IMAGE_REPO:-local}/iceosv1a-api:${IMAGE_TAG:-dev}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - api_data:/app/data
    env_file:
      - config/dev.env.example
      - env.ci
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      REDIS_CLIENT_NAME: ${REDIS_CLIENT_NAME:-ice_api}
      REDIS_DECODE_RESPONSES: ${REDIS_DECODE_RESPONSES:-1}
      REDIS_SOCKET_TIMEOUT: ${REDIS_SOCKET_TIMEOUT:-5.0}
      REDIS_SOCKET_CONNECT_TIMEOUT: ${REDIS_SOCKET_CONNECT_TIMEOUT:-3.0}
      REDIS_MAX_CONNECTIONS: ${REDIS_MAX_CONNECTIONS:-20}
      CHAT_TTL_SECONDS: ${CHAT_TTL_SECONDS:-2592000}
      EXECUTION_TTL_SECONDS: ${EXECUTION_TTL_SECONDS:-604800}
      ORG_BUDGET_USD: ${ORG_BUDGET_USD:-5.00}
      ICE_API_TOKEN: ${ICE_API_TOKEN:-dev-token}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ICEOS_PLUGIN_MANIFESTS: ${ICEOS_PLUGIN_MANIFESTS:-/app/plugins/kits/tools/memory/plugins.v0.yaml,/app/plugins/kits/tools/search/plugins.v0.yaml}
      ICE_ENABLE_WASM: ${ICE_ENABLE_WASM:-"0"}
      CONTEXT_STORE_BACKEND: ${CONTEXT_STORE_BACKEND:-redis}
      ICE_STRICT_SERIALIZATION: ${ICE_STRICT_SERIALIZATION:-1}
      DATABASE_URL: postgresql+asyncpg://iceos:iceos@postgres:5432/iceos
      ICEOS_RUN_MIGRATIONS: 1
      ICEOS_REQUIRE_DB: 1
      ICEOS_EMBEDDINGS_PROVIDER: ${ICEOS_EMBEDDINGS_PROVIDER:-hash}
      ICE_ECHO_LLM_FOR_TESTS: 1
      # Enable legacy builder endpoints for integration tests
      ICEOS_ENABLE_LEGACY_BUILDER: 1
      ICEOS_ENABLE_BUILDER_PREVIEW: 1
      ICEOS_ENABLE_DRAFTS: 1
      ICEOS_ENABLE_BUILDER_SESSIONS: 1
      # Disable seccomp-based syscall filtering in integration tests to avoid flakiness under constrained runners
      ICE_SKIP_STRESS: ${ICE_SKIP_STRESS:-"1"}
      DISABLE_REDIS_BG_LOOP: ${DISABLE_REDIS_BG_LOOP:-"1"}
      ICE_DISABLE_SECCOMP: ${ICE_DISABLE_SECCOMP:-"1"}
      ICE_SKIP_EXTERNAL: 1
      ICE_THREADPOOL_MAX_WORKERS: 16
    command:
      ["uvicorn", "ice_api.main:app", "--host", "0.0.0.0", "--port", "8000", "--timeout-keep-alive", "5", "--limit-concurrency", "8"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys\ntry:\n  with urllib.request.urlopen('http://localhost:8000/api/v1/meta/registry/health', timeout=3) as r:\n    data = r.read()\n    sys.exit(0 if b'tools_count' in data else 1)\nexcept Exception:\n  sys.exit(1)\nPY",
        ]
      interval: 10s
      timeout: 3s
      retries: 30

  itest:
    # Prebuilt “test” image that already has pytest + code under /app
    image: ${IMAGE_REPO:-local}/iceosv1a-itest:${IMAGE_TAG:-dev}
    depends_on:
      api:
        condition: service_healthy
    # If tests call http://127.0.0.1:8000, share API network namespace
    network_mode: "service:api"
    environment:
      PYTHONPATH: /app/src:/app
      ICE_STRICT_SERIALIZATION: ${ICE_STRICT_SERIALIZATION:-1}
      ICEOS_PLUGIN_MANIFESTS: /app/plugins/kits/tools/memory/plugins.v0.yaml,/app/plugins/kits/tools/search/plugins.v0.yaml
      ICE_ECHO_LLM_FOR_TESTS: 1
      ICE_EXEC_SYNC_FOR_TESTS: 1
      ICE_ENABLE_WASM: ${ICE_ENABLE_WASM:-"0"}
      ICE_SKIP_STRESS: ${ICE_SKIP_STRESS:-"1"}
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgresql+asyncpg://iceos:iceos@postgres:5432/iceos
      ICEOS_RUN_MIGRATIONS: 1
      DISABLE_REDIS_BG_LOOP: 1
      ICE_SKIP_EXTERNAL: 1
      ICE_THREADPOOL_MAX_WORKERS: 16
    env_file:
      - env.ci
    command: ["bash", "-lc", "chmod +x scripts/itest_runner.sh && ./scripts/itest_runner.sh"]

volumes:
  redis_data:
  api_data:
  pg_itest:
