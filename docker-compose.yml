services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-iceos}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-iceos}
      POSTGRES_DB: ${POSTGRES_DB:-iceos}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - pg_data:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - redis
      - postgres
    # Keep a single healthcheck (detailed) below
    ports:
      - "8000:8000"
    volumes:
      - api_data:/app/data
      - ./examples:/app/examples:ro
      - ./scripts:/app/scripts:ro
    env_file:
      - config/dev.env.example
    environment:
      # Override Redis URL to point to compose service
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      REDIS_CLIENT_NAME: ${REDIS_CLIENT_NAME:-ice_api}
      REDIS_DECODE_RESPONSES: ${REDIS_DECODE_RESPONSES:-1}
      REDIS_SOCKET_TIMEOUT: ${REDIS_SOCKET_TIMEOUT:-5.0}
      REDIS_SOCKET_CONNECT_TIMEOUT: ${REDIS_SOCKET_CONNECT_TIMEOUT:-3.0}
      REDIS_MAX_CONNECTIONS: ${REDIS_MAX_CONNECTIONS:-100}
      CHAT_TTL_SECONDS: ${CHAT_TTL_SECONDS:-2592000}
      EXECUTION_TTL_SECONDS: ${EXECUTION_TTL_SECONDS:-604800}
      ORG_BUDGET_USD: ${ORG_BUDGET_USD:-5.00}
      ICE_API_TOKEN: ${ICE_API_TOKEN:-dev-token}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # Demo-friendly rate limits (dev only)
      ICE_RATE_WINDOW_SECONDS: ${ICE_RATE_WINDOW_SECONDS:-1.0}
      ICE_RATE_MAX_REQUESTS: ${ICE_RATE_MAX_REQUESTS:-1000}
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://iceos:iceos@postgres:5432/iceos}
      ICEOS_RUN_MIGRATIONS: ${ICEOS_RUN_MIGRATIONS:-1}
      ICEOS_REQUIRE_DB: ${ICEOS_REQUIRE_DB:-1}
      ICEOS_PLUGIN_MANIFESTS: ${ICEOS_PLUGIN_MANIFESTS:-/app/packs/first_party_tools/plugins.v0.yaml}
      CONTEXT_STORE_BACKEND: ${CONTEXT_STORE_BACKEND:-redis}
    command: ["uvicorn", "ice_api.main:app", "--host", "0.0.0.0", "--port", "8000", "--timeout-keep-alive", "5", "--limit-concurrency", "100"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/readyz"]
      interval: 5s
      timeout: 3s
      retries: 10

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://iceos:iceos@postgres:5432/iceos}
    command: ["bash", "-lc", "alembic -c alembic.ini upgrade head"]
    restart: "no"

volumes:
  redis_data:
  api_data:
  pg_data:
