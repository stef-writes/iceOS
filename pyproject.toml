[build-system]
requires = ["poetry-core>=1.7.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    --verbose
    --tb=short
    --strict-markers
    --cov=app
    --cov-report=html
    --cov-report=term-missing
    --junitxml=tests/output/test-results.xml
    --html=tests/output/test-report.html
    --self-contained-html
"""

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.poetry]
name = "ice-os"
version = "0.1.0"
description = "iceOS â€“ Intelligent Composable Environment platform"
license = "MIT"
authors = ["iceOS contributors <opensource@iceos.dev>"]
readme = "README.md"

# Tell Poetry we use src/ layout and enumerate the top-level packages.
packages = [
  { include = "app", from = "src" },
  { include = "ice_sdk", from = "src" },
  { include = "ice_tools", from = "src" },
  { include = "ice_agents", from = "src" },
  { include = "ice_orchestrator", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8.0"
alembic = "^1.12.1"
anthropic = "*"
fastapi = "^0.104.0"
google-generativeai = "^0.3.0"
httpx = "^0.27.0"
networkx = "^3.1"
openai = "^1.0.0"
opentelemetry-api = "^1.23.0"
opentelemetry-sdk = "^1.23.0"
packaging = "^23.2"
pydantic = "^2.4.2"
python-dotenv = "^1.0.0"
python-multipart = "^0.0.6"
sqlalchemy = "^2.0.23"
structlog = "^24.1.0"
tenacity = "^8.2.3"
tiktoken = "^0.5.1"
uvicorn = "^0.24.0"

[tool.poetry.dev-dependencies]
coverage = "^7.2.0"
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-benchmark = "^4.0.0"
pytest-cov = "^4.1.0"
pytest-html = "^4.1.1"
pytest-metadata = "^3.0.0"
pytest-mock = "^3.12.0"
pytest-randomly = "^3.15.0"
pytest-timeout = "^2.2.0"
pytest-xdist = "^3.3.1"
black = "^23.10.1"
flake8 = "^6.1.0"
isort = "^5.12.0"
mypy = "^1.5.0"

