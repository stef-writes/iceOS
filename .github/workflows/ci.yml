name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit_and_type:
    name: Lint, Type, Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker info
        run: |
          docker version
          docker info

      - name: Lint + Type + Unit Tests
        run: make ci

  integration:
    name: Integration Tests (docker-compose.itest)
    needs: unit_and_type
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: local
      IMAGE_TAG: dev
      ICE_SKIP_STRESS: 1
      ICE_ENABLE_WASM: 0
      ICEOS_EMBEDDINGS_PROVIDER: hash
      ICEOS_RUN_MIGRATIONS: 1
      ICEOS_REQUIRE_DB: 1
      ICE_SKIP_EXTERNAL: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker info
        run: |
          docker version
          docker info

      - name: Build API and test images (with cache)
        run: |
          docker buildx build \
            --load \
            --cache-from type=gha,scope=api \
            --cache-to type=gha,scope=api,mode=max \
            --target api -t ${IMAGE_REPO}/iceosv1a-api:${IMAGE_TAG} .
          docker buildx build \
            --load \
            --cache-from type=gha,scope=itest \
            --cache-to type=gha,scope=itest,mode=max \
            --target test -t ${IMAGE_REPO}/iceosv1a-itest:${IMAGE_TAG} .

      - name: Run docker compose itest
        run: make ci-integration

  full_collection:
    name: Full Test Collection (no ignores)
    needs: unit_and_type
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build test image
        run: docker build --target test -t iceos-test .
      - name: Collect all tests
        run: docker run --rm -t iceos-test pytest -c config/testing/pytest.ini -q --collect-only -o addopts="" tests

  wasm_optional:
    name: WASM Tests (optional)
    needs: unit_and_type
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run wasm suite
        run: make ci-wasm
        continue-on-error: true

  stress_optional:
    name: Stress Tests (resource sandbox, optional)
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run stress suite
        run: |
          IMAGE_REPO=local IMAGE_TAG=dev ICE_SKIP_STRESS=0 \
          docker compose -f docker-compose.itest.yml run --rm itest \
            bash -lc 'pytest -c config/testing/pytest.ini -q tests/integration/ice_orchestrator/test_resource_sandbox.py'
        continue-on-error: true
