name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # No Poetry install here. We use Dockerized lint and type/test to avoid drift.
      - name: Lint (Dockerized Ruff)
        run: make lint-docker

      - name: Type check (devcheck container)
        run: |
          set -euo pipefail
          docker build --target devcheck -t iceos-devcheck .
          docker run --rm -t \
            -v "$PWD/src:/app/src" \
            -v "$PWD/typings:/app/typings" \
            -v "$PWD/config:/app/config" \
            iceos-devcheck

      - name: Run unit tests (Docker cached stage)
        run: make test

      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov

  integration-smoke:
    needs: quality-gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.3

      - name: Install deps (+dev + integration extras)
        run: |
          set -euo pipefail
          poetry install --with dev --sync --no-interaction -E test_integration

      - name: Run smoke integration (API health)
        env:
          PYTHONPATH: src
        run: |
          poetry run pytest -c config/testing/pytest.ini tests/integration/ice_api/test_health_endpoints.py -q

  integration-tests:
    if: github.ref == 'refs/heads/main'
    needs: integration-smoke
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.3

      - name: Install deps (+dev + integration extras)
        run: |
          set -euo pipefail
          poetry install --with dev --sync --no-interaction -E test_integration

      - name: Run integration tests
        env:
          PYTHONPATH: src
        run: |
          poetry run pytest -c config/testing/pytest.ini tests/integration -q
