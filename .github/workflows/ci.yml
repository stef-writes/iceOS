name: ci

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}
  SEMVER_TRACK: 1.0.x

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fast:
    name: Lint, type-check, unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Type check (dockerized mypy)
        run: make type-check
      - name: Unit tests (dockerized)
        env:
          PYTEST_ADDOPTS: -q -k 'not heavy'
        run: make test

  build:
    name: Build and push images
    needs: fast
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        shell: bash
        run: |
          SHA_TAG=${GITHUB_SHA}
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            REF_TAG="pr-${{ github.event.number }}"
          else
            REF_TAG=$(echo "${GITHUB_REF_NAME}" | tr '/' '-')
          fi
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT
          echo "ref_tag=${REF_TAG}" >> $GITHUB_OUTPUT
          echo "repo_lc=${REPO_LC}" >> $GITHUB_OUTPUT
          echo "REPO_LC=${REPO_LC}" >> $GITHUB_ENV

      - name: Build+push devcheck image
        run: |
          docker buildx build \
            --target devcheck \
            --push \
            --tag ${REGISTRY}/${REPO_LC}/iceos-devcheck:${{ steps.meta.outputs.sha_tag }} \
            --tag ${REGISTRY}/${REPO_LC}/iceos-devcheck:${{ steps.meta.outputs.ref_tag }} \
            --tag ${REGISTRY}/${REPO_LC}/iceos-devcheck:${SEMVER_TRACK} \
            --build-arg VCS_REF=${GITHUB_SHA} \
            --build-arg VERSION=${SEMVER_TRACK} \
            --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            --cache-from type=gha \
            --cache-to   type=gha,mode=max \
            .

      - name: Build+push test image
        run: |
          docker buildx build \
            --target test \
            --push \
            --tag ${REGISTRY}/${REPO_LC}/iceosv1a-itest:${{ steps.meta.outputs.sha_tag }} \
            --tag ${REGISTRY}/${REPO_LC}/iceosv1a-itest:${{ steps.meta.outputs.ref_tag }} \
            --tag ${REGISTRY}/${REPO_LC}/iceosv1a-itest:${SEMVER_TRACK} \
            --build-arg VCS_REF=${GITHUB_SHA} \
            --build-arg VERSION=${SEMVER_TRACK} \
            --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            --cache-from type=gha \
            --cache-to   type=gha,mode=max \
            .

      - name: Build+push api image
        run: |
          docker buildx build \
            --target api \
            --push \
            --tag ${REGISTRY}/${REPO_LC}/iceosv1a-api:${{ steps.meta.outputs.sha_tag }} \
            --tag ${REGISTRY}/${REPO_LC}/iceosv1a-api:${{ steps.meta.outputs.ref_tag }} \
            --tag ${REGISTRY}/${REPO_LC}/iceosv1a-api:${SEMVER_TRACK} \
            --build-arg VCS_REF=${GITHUB_SHA} \
            --build-arg VERSION=${SEMVER_TRACK} \
            --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            --cache-from type=gha \
            --cache-to   type=gha,mode=max \
            .

      - name: SBOM (api)
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ steps.meta.outputs.repo_lc }}/iceosv1a-api:${{ steps.meta.outputs.sha_tag }}
          format: cyclonedx-json

      - name: Trivy scan (api)
        uses: aquasecurity/trivy-action@0.25.0
        with:
          scan-type: image
          image-ref: ${{ env.REGISTRY }}/${{ steps.meta.outputs.repo_lc }}/iceosv1a-api:${{ steps.meta.outputs.sha_tag }}
          format: table
          ignore-unfixed: true
          vuln-type: os,library
          severity: HIGH,CRITICAL
          scanners: vuln
          exit-code: '1'

  itest_smoke:
    name: Integration smoke (compose)
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Compose up
        env:
          GITHUB_SHA: ${{ github.sha }}
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_REPO: ${{ steps.meta.outputs.repo_lc }}
        run: |
          docker compose -f docker-compose.itest.yml up --abort-on-container-exit --exit-code-from itest
