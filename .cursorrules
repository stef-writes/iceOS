# Cursor Rules for iceOS

1. Use type hints and Pydantic models in every new Node/Tool.

2. External side-effects live only inside Tool implementations.

3. Event names follow `source.eventVerb` (e.g. webhook.userCreated).

4. Never import from `app.*` inside `ice_sdk.*` (layer boundary).

5. Prefer async/await; long I/O must not block the event loop.

6. If you propose file edits, update matching tests in `tests/` and run `make test`. 

7. Mypy must pass in --strict mode on every commit.

8. Any `# type: ignore` must include a comment explaining the technical reason (e.g. "3rd-party stub missing", "circular import", "false positive").

9. Raise only typed, domain-specific exceptions; catch the narrowest subclass possible.

10. All public APIs must use Google-style docstrings with parameter types, return types, and one minimal code example.

11. All cross-layer calls go through stable service interfaces (services/*).

12. Direct imports across layers are forbidden.

13. Every Node/Tool exposes an idempotent validate() method; orchestration must call it before execution.

14. Deprecations use @deprecated(version, replacement) decorators and must log a structured warning at call-time.

15. All runtime dependencies must be pinned in pyproject.toml; CI must pass in staging before lockfile updates are merged.

16. Test coverage on new/changed lines must be â‰¥90%; CI will reject PRs below this threshold.

18. Avoid `importlib` or `__import__` in core layers unless inside a plugin registry. Dynamic imports must register with context manager.

