{
  "$defs": {
    "ContextFormat": {
      "enum": [
        "text",
        "json",
        "markdown",
        "code",
        "custom"
      ],
      "title": "ContextFormat",
      "type": "string"
    },
    "ContextRule": {
      "description": "Rule for handling context in a node",
      "properties": {
        "include": {
          "default": true,
          "description": "Whether to include this context",
          "title": "Include",
          "type": "boolean"
        },
        "format": {
          "$ref": "#/$defs/ContextFormat",
          "default": "text",
          "description": "Format of the context"
        },
        "required": {
          "default": false,
          "description": "Whether this context is required",
          "title": "Required",
          "type": "boolean"
        },
        "max_tokens": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Maximum tokens allowed for this context",
          "title": "Max Tokens"
        },
        "truncate": {
          "default": true,
          "description": "Whether to truncate if over token limit",
          "title": "Truncate",
          "type": "boolean"
        }
      },
      "title": "ContextRule",
      "type": "object"
    },
    "InputMapping": {
      "description": "Mapping configuration for node inputs",
      "properties": {
        "source_node_id": {
          "description": "Source node ID (UUID of the dependency)",
          "title": "Source Node Id",
          "type": "string"
        },
        "source_output_key": {
          "description": "Key from the source node's output object to use (e.g., 'text', 'result', 'data.items.0')",
          "title": "Source Output Key",
          "type": "string"
        },
        "rules": {
          "additionalProperties": true,
          "description": "Optional mapping/transformation rules (currently unused)",
          "title": "Rules",
          "type": "object"
        }
      },
      "required": [
        "source_node_id",
        "source_output_key"
      ],
      "title": "InputMapping",
      "type": "object"
    },
    "LLMConfig": {
      "additionalProperties": true,
      "description": "Configuration for language models",
      "properties": {
        "provider": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Provider"
        },
        "model": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Model"
        },
        "temperature": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Temperature"
        },
        "max_tokens": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Tokens"
        },
        "max_context_tokens": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Context Tokens"
        },
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Api Key"
        },
        "top_p": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Top P"
        },
        "frequency_penalty": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frequency Penalty"
        },
        "presence_penalty": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Presence Penalty"
        },
        "stop_sequences": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stop Sequences"
        },
        "custom_parameters": {
          "additionalProperties": true,
          "description": "Provider-specific parameters",
          "title": "Custom Parameters",
          "type": "object"
        }
      },
      "title": "LLMConfig",
      "type": "object"
    },
    "ModelProvider": {
      "description": "Supported model providers",
      "enum": [
        "openai",
        "anthropic",
        "google",
        "deepseek",
        "custom"
      ],
      "title": "ModelProvider",
      "type": "string"
    },
    "NodeMetadata": {
      "description": "Metadata model for node versioning and ownership",
      "properties": {
        "node_id": {
          "description": "Unique node identifier",
          "title": "Node Id",
          "type": "string"
        },
        "node_type": {
          "description": "Type of node (ai)",
          "title": "Node Type",
          "type": "string"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "version": {
          "default": "1.0.0",
          "description": "Semantic version of node configuration",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "title": "Version",
          "type": "string"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Node owner/maintainer",
          "title": "Owner"
        },
        "created_at": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Created At"
        },
        "modified_at": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Modified At"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Description of the node",
          "title": "Description"
        },
        "error_type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Type of error if execution failed",
          "title": "Error Type"
        },
        "timestamp": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Timestamp"
        },
        "start_time": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Execution start time",
          "title": "Start Time"
        },
        "end_time": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Execution end time",
          "title": "End Time"
        },
        "duration": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Execution duration in seconds",
          "title": "Duration"
        },
        "provider": {
          "anyOf": [
            {
              "$ref": "#/$defs/ModelProvider"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "LLM provider used for execution"
        },
        "retry_count": {
          "default": 0,
          "description": "Number of retry attempts performed during node execution",
          "minimum": 0,
          "title": "Retry Count",
          "type": "integer"
        }
      },
      "required": [
        "node_id",
        "node_type"
      ],
      "title": "NodeMetadata",
      "type": "object"
    },
    "ToolConfig": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "parameters": {
          "additionalProperties": true,
          "title": "Parameters",
          "type": "object"
        }
      },
      "required": [
        "name",
        "parameters"
      ],
      "title": "ToolConfig",
      "type": "object"
    }
  },
  "description": "Configuration for an LLM-powered node.",
  "properties": {
    "id": {
      "description": "Unique identifier for the node",
      "title": "Id",
      "type": "string"
    },
    "type": {
      "enum": ["ai", "llm"],
      "default": "llm",
      "title": "Type",
      "description": "Node discriminator: 'llm' (preferred) or legacy 'ai'.",
      "deprecated": "ai"
    },
    "name": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Human-readable name",
      "title": "Name"
    },
    "dependencies": {
      "description": "IDs of prerequisite nodes",
      "items": {
        "type": "string"
      },
      "title": "Dependencies",
      "type": "array"
    },
    "level": {
      "default": 0,
      "description": "Execution level for parallelism",
      "title": "Level",
      "type": "integer"
    },
    "metadata": {
      "anyOf": [
        {
          "$ref": "#/$defs/NodeMetadata"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "provider": {
      "$ref": "#/$defs/ModelProvider",
      "default": "openai",
      "description": "Model provider for the node"
    },
    "timeout_seconds": {
      "anyOf": [
        {
          "minimum": 1,
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Hard timeout for node execution in seconds (None = no timeout)",
      "title": "Timeout Seconds"
    },
    "retries": {
      "default": 0,
      "description": "Maximum number of retries if the node execution fails",
      "minimum": 0,
      "title": "Retries",
      "type": "integer"
    },
    "backoff_seconds": {
      "default": 0.0,
      "description": "Base backoff seconds used for exponential backoff between retries (0 disables sleep)",
      "minimum": 0.0,
      "title": "Backoff Seconds",
      "type": "number"
    },
    "input_schema": {
      "anyOf": [
        {
          "additionalProperties": true,
          "type": "object"
        },
        {}
      ],
      "title": "Input Schema"
    },
    "output_schema": {
      "anyOf": [
        {
          "additionalProperties": true,
          "type": "object"
        },
        {}
      ],
      "title": "Output Schema"
    },
    "input_mappings": {
      "additionalProperties": {
        "$ref": "#/$defs/InputMapping"
      },
      "title": "Input Mappings",
      "type": "object"
    },
    "use_cache": {
      "default": true,
      "description": "Whether the orchestrator should reuse cached results when the context & config are unchanged.",
      "title": "Use Cache",
      "type": "boolean"
    },
    "input_selection": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "List of input keys to include in the prompt (order preserved). If None, include all inputs.",
      "title": "Input Selection"
    },
    "model": {
      "description": "Model name, e.g. gpt-3.5-turbo",
      "title": "Model",
      "type": "string"
    },
    "prompt": {
      "description": "Prompt template",
      "title": "Prompt",
      "type": "string"
    },
    "llm_config": {
      "$ref": "#/$defs/LLMConfig",
      "description": "Provider-specific parameters"
    },
    "temperature": {
      "default": 0.7,
      "title": "Temperature",
      "type": "number"
    },
    "max_tokens": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Max Tokens"
    },
    "context_rules": {
      "additionalProperties": {
        "$ref": "#/$defs/ContextRule"
      },
      "title": "Context Rules",
      "type": "object"
    },
    "format_specifications": {
      "additionalProperties": true,
      "title": "Format Specifications",
      "type": "object"
    },
    "coerce_output_types": {
      "default": true,
      "title": "Coerce Output Types",
      "type": "boolean"
    },
    "coerce_input_types": {
      "default": true,
      "title": "Coerce Input Types",
      "type": "boolean"
    },
    "tools": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/$defs/ToolConfig"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "List of ToolConfig objects describing callable tools available to the node",
      "title": "Tools"
    },
    "tool_args": {
      "additionalProperties": true,
      "description": "Default arguments for the tool when invoked via tool_name",
      "title": "Tool Args",
      "type": "object"
    }
  },
  "required": [
    "id",
    "model",
    "prompt",
    "llm_config"
  ],
  "title": "AiNodeConfig",
  "type": "object",
  "$comment": "generated from ice_sdk.models.node_models:AiNodeConfig"
}